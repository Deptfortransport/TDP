// ***********************************************
// NAME 		: TestAirScheduleImportTask.cs
// AUTHOR 		: Atos Origin
// DATE CREATED : 19/05/2004
// DESCRIPTION 	: Tests AirScheduleImportTask class.
// ************************************************
//$Log:   P:/TDPortal/archives/DotNet2.0Codebase/TransportDirect/AirDataProvider/Test/TestAirScheduleImportTask.cs-arc  $
//
//   Rev 1.0   Nov 08 2007 12:18:46   mturner
//Initial revision.
//
//   Rev 1.5   Feb 08 2005 12:41:52   bflenk
//Changed Assertion to Assert
//
//   Rev 1.4   Aug 26 2004 11:49:02   CHosegood
//Tests that modify existing data have been marked as IGNORE
//
//   Rev 1.3   Aug 24 2004 10:25:00   CHosegood
//Updated test data files to copy
//
//   Rev 1.2   Aug 16 2004 09:59:12   CHosegood
//Updated tests
//
//   Rev 1.1   Jun 09 2004 18:03:00   CHosegood
//Files required by test are now located in \bin\Debug\AirDataProvider\ so that nUnit tests work on automated builds.
//
//   Rev 1.0   Jun 09 2004 17:44:16   CHosegood
//Initial revision.


using System;
using System.Text;
using System.IO;
using System.Diagnostics;

using NUnit.Framework;

using TransportDirect.Common;
using TransportDirect.Common.PropertyService.Properties;
using TransportDirect.Common.ServiceDiscovery;

using Logger = System.Diagnostics.Trace;

namespace TransportDirect.UserPortal.AirDataProvider
{
	/// <summary>
	/// Summary description for TestAirScheduleImportTask.
	/// </summary>
	[TestFixture]
	public class TestAirScheduleImportTask
	{

		#region Constructor
		/// <summary>
		/// Constructor
		/// </summary>
		public TestAirScheduleImportTask()
		{
		}
		#endregion

		#region Setup/teardown
        private void CopyFileForTest( DirectoryInfo destinationDirectory, string soruceFile, string destinationFile ) 
        {
            if ( !destinationDirectory.Exists )
                destinationDirectory.Create();

            FileInfo file = new FileInfo( @soruceFile );
            if ( file.Exists ) 
            {
                string copyName =  new StringBuilder(destinationDirectory.FullName)
                    .Append( @"\" ).Append( @destinationFile )
                    .ToString();

                //If the destination file exists make sure it is not read-only so we can copy over it.
                FileInfo dest = new FileInfo( copyName );
                if ( dest.Exists ) 
                {
                    File.SetAttributes( copyName, FileAttributes.Normal );
                }

                file.CopyTo( copyName, true );
                File.SetAttributes( copyName, FileAttributes.Normal );
            }
            else 
            {
                throw new Exception( file.FullName + " does not exist" );
            }
        }

		/// <summary>
		/// Setup files/directories required
		/// </summary>
        [SetUp]
        public void Init()
        {
            DirectoryInfo dir;
            try 
            {
                // Initialise services
                TDServiceDiscovery.Init( new TestInitialisation() );

                //Copy the IF066( flightroutes) file to the input directory for TTBO air builder.
                //This file is copied incase the the RTEL process is commented out the
                //schedule import to speed up testing.  This file is generated by the
                //RTEL process
                //                dir = new DirectoryInfo( Properties.Current["datagateway.rtel.output.path"] );
                //                CopyFileForTest( dir, @".\AirDataProvider\IF066.xml", Properties.Current["datagateway.rtel.output.xml"] ) ;

                //Copy IF062 ( cif file ) to input directory for TTBO air builder
                //This file is copied incase the the RTEL process is commented out the
                //schedule import to speed up testing.  This file is generated by the
                //RTEL process
                //                dir = new DirectoryInfo( Properties.Current["datagateway.rtel.output.path"] );
                //                CopyFileForTest( dir, @".\AirDataProvider\IF062.cif", Properties.Current["datagateway.rtel.output.cif"] ) ;

                //Copy the IF067(air transfer times) input file to the input directory for the test
                dir = new DirectoryInfo( Properties.Current["datagateway.data.live.directory"] );
                CopyFileForTest( dir, @".\AirDataProvider\IF067_037.csv", @"\connect.csv" ) ;

                //Copy the IF068(TTBO airport list) input file to the input directory for the test
                dir = new DirectoryInfo( Properties.Current["datagateway.data.static.directory"] );
                CopyFileForTest( dir, @".\AirDataProvider\IF068.csv", @"\aircoord.csv" ) ;

                //Copy the IF069(OAG schedules) input file to the input directory for the test
                //dir = new DirectoryInfo( Properties.Current["Gateway.ProcessingPath"] + @"\arh321\" );
                dir = new DirectoryInfo( new StringBuilder( Properties.Current["Gateway.ProcessingPath"] ).Append(@"\")
                    .Append ( Properties.Current["datagateway.airbackend.schedules.feedname"] ).Append(@"\").ToString() ) ;
                CopyFileForTest( dir, @".\AirDataProvider\IF069_337.oag.summer2004", @"\oagsum04.txt" ) ;
//                CopyFileForTest( dir, @".\AirDataProvider\IF069_337.oag.winter2004", @"\oagwin04.txt" ) ;

                //Copy the IF070(Air Operators) input file to the input directory for the test
                dir = new DirectoryInfo( Properties.Current["datagateway.data.live.directory"] ) ;
                CopyFileForTest( dir, @".\AirDataProvider\IF070_037.csv", @"\airOperators.csv" ) ;

            } 
            catch ( Exception e ) 
            {
                Assert.Fail( "Error in init: " + e.Message  );
            }
        }

		/// <summary>
		/// Clear up ready for next test
		/// </summary>
		[TearDown]
		public void ClearUp() { }
		#endregion

		#region Tests
		/// <summary>
        /// Test handling of successful request.
		/// </summary>
		[Test]
        [Ignore( "Requires RTEL ATDBA process to be installed and it takes ages!!!" )]
		public void AirScheduleImportTaskCorrectParameters()
		{
            int result = 0;

            FileInfo file = new FileInfo( Properties.Current["Gateway.ProcessingPath"] + @"\arh321\oagsum04.txt" );
            Assert.AreEqual(true, file.Exists, "Input file does not exist");

            AirScheduleImportTask import = new AirScheduleImportTask( "arh321", "", "", "", System.IO.Directory.GetCurrentDirectory() );
            result = import.Run( file.FullName );

            Assert.AreEqual(0, result, "Success result expected");
        }

		#endregion
	}
}