//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.296.
// 
#pragma warning disable 1591

namespace TransportDirect.UserPortal.LocationService.GazopsWeb {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="GazopsWebSoap", Namespace="http://www.esriuk.com/gazops")]
    public partial class GazopsWeb : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SubscriptionInformationURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGazetteersOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginServiceURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback DriverCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DrillDownAddressQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostcodeMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlaceNameMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback StreetMatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchAddressAliasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceRestrictionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostcodeGeocodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddressGeocodeNIOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public GazopsWeb() {
            this.Url = "http://tri-tdp-iis/GazopsWeb/GazopsWeb.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SubscriptionInformationURLCompletedEventHandler SubscriptionInformationURLCompleted;
        
        /// <remarks/>
        public event ListGazetteersCompletedEventHandler ListGazetteersCompleted;
        
        /// <remarks/>
        public event LoginServiceURLCompletedEventHandler LoginServiceURLCompleted;
        
        /// <remarks/>
        public event DriverCapabilitiesCompletedEventHandler DriverCapabilitiesCompleted;
        
        /// <remarks/>
        public event DrillDownAddressQueryCompletedEventHandler DrillDownAddressQueryCompleted;
        
        /// <remarks/>
        public event PostcodeMatchCompletedEventHandler PostcodeMatchCompleted;
        
        /// <remarks/>
        public event PlaceNameMatchCompletedEventHandler PlaceNameMatchCompleted;
        
        /// <remarks/>
        public event StreetMatchCompletedEventHandler StreetMatchCompleted;
        
        /// <remarks/>
        public event FetchRecordCompletedEventHandler FetchRecordCompleted;
        
        /// <remarks/>
        public event FetchAddressAliasCompletedEventHandler FetchAddressAliasCompleted;
        
        /// <remarks/>
        public event GetServiceRestrictionCompletedEventHandler GetServiceRestrictionCompleted;
        
        /// <remarks/>
        public event PostcodeGeocodeCompletedEventHandler PostcodeGeocodeCompleted;
        
        /// <remarks/>
        public event AddressGeocodeNICompletedEventHandler AddressGeocodeNICompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/SubscriptionInformationURL", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SubscriptionInformationURL() {
            object[] results = this.Invoke("SubscriptionInformationURL", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSubscriptionInformationURL(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SubscriptionInformationURL", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSubscriptionInformationURL(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SubscriptionInformationURLAsync() {
            this.SubscriptionInformationURLAsync(null);
        }
        
        /// <remarks/>
        public void SubscriptionInformationURLAsync(object userState) {
            if ((this.SubscriptionInformationURLOperationCompleted == null)) {
                this.SubscriptionInformationURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscriptionInformationURLOperationCompleted);
            }
            this.InvokeAsync("SubscriptionInformationURL", new object[0], this.SubscriptionInformationURLOperationCompleted, userState);
        }
        
        private void OnSubscriptionInformationURLOperationCompleted(object arg) {
            if ((this.SubscriptionInformationURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscriptionInformationURLCompleted(this, new SubscriptionInformationURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/ListGazetteers", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ListGazetteers() {
            object[] results = this.Invoke("ListGazetteers", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginListGazetteers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ListGazetteers", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndListGazetteers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ListGazetteersAsync() {
            this.ListGazetteersAsync(null);
        }
        
        /// <remarks/>
        public void ListGazetteersAsync(object userState) {
            if ((this.ListGazetteersOperationCompleted == null)) {
                this.ListGazetteersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGazetteersOperationCompleted);
            }
            this.InvokeAsync("ListGazetteers", new object[0], this.ListGazetteersOperationCompleted, userState);
        }
        
        private void OnListGazetteersOperationCompleted(object arg) {
            if ((this.ListGazetteersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGazetteersCompleted(this, new ListGazetteersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/LoginServiceURL", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginServiceURL() {
            object[] results = this.Invoke("LoginServiceURL", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLoginServiceURL(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("LoginServiceURL", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLoginServiceURL(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginServiceURLAsync() {
            this.LoginServiceURLAsync(null);
        }
        
        /// <remarks/>
        public void LoginServiceURLAsync(object userState) {
            if ((this.LoginServiceURLOperationCompleted == null)) {
                this.LoginServiceURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginServiceURLOperationCompleted);
            }
            this.InvokeAsync("LoginServiceURL", new object[0], this.LoginServiceURLOperationCompleted, userState);
        }
        
        private void OnLoginServiceURLOperationCompleted(object arg) {
            if ((this.LoginServiceURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginServiceURLCompleted(this, new LoginServiceURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/DriverCapabilities", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DriverCapabilities(string gazID, string securityToken) {
            object[] results = this.Invoke("DriverCapabilities", new object[] {
                        gazID,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDriverCapabilities(string gazID, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DriverCapabilities", new object[] {
                        gazID,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDriverCapabilities(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DriverCapabilitiesAsync(string gazID, string securityToken) {
            this.DriverCapabilitiesAsync(gazID, securityToken, null);
        }
        
        /// <remarks/>
        public void DriverCapabilitiesAsync(string gazID, string securityToken, object userState) {
            if ((this.DriverCapabilitiesOperationCompleted == null)) {
                this.DriverCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDriverCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("DriverCapabilities", new object[] {
                        gazID,
                        securityToken}, this.DriverCapabilitiesOperationCompleted, userState);
        }
        
        private void OnDriverCapabilitiesOperationCompleted(object arg) {
            if ((this.DriverCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DriverCapabilitiesCompleted(this, new DriverCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/DrillDownAddressQuery", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DrillDownAddressQuery(string sAddressQueryString, string picklistcriteria, string singleAddressSelect, string queryReference, bool bFuzzy, string gazID, string envelope, string securityToken) {
            object[] results = this.Invoke("DrillDownAddressQuery", new object[] {
                        sAddressQueryString,
                        picklistcriteria,
                        singleAddressSelect,
                        queryReference,
                        bFuzzy,
                        gazID,
                        envelope,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDrillDownAddressQuery(string sAddressQueryString, string picklistcriteria, string singleAddressSelect, string queryReference, bool bFuzzy, string gazID, string envelope, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DrillDownAddressQuery", new object[] {
                        sAddressQueryString,
                        picklistcriteria,
                        singleAddressSelect,
                        queryReference,
                        bFuzzy,
                        gazID,
                        envelope,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDrillDownAddressQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DrillDownAddressQueryAsync(string sAddressQueryString, string picklistcriteria, string singleAddressSelect, string queryReference, bool bFuzzy, string gazID, string envelope, string securityToken) {
            this.DrillDownAddressQueryAsync(sAddressQueryString, picklistcriteria, singleAddressSelect, queryReference, bFuzzy, gazID, envelope, securityToken, null);
        }
        
        /// <remarks/>
        public void DrillDownAddressQueryAsync(string sAddressQueryString, string picklistcriteria, string singleAddressSelect, string queryReference, bool bFuzzy, string gazID, string envelope, string securityToken, object userState) {
            if ((this.DrillDownAddressQueryOperationCompleted == null)) {
                this.DrillDownAddressQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDrillDownAddressQueryOperationCompleted);
            }
            this.InvokeAsync("DrillDownAddressQuery", new object[] {
                        sAddressQueryString,
                        picklistcriteria,
                        singleAddressSelect,
                        queryReference,
                        bFuzzy,
                        gazID,
                        envelope,
                        securityToken}, this.DrillDownAddressQueryOperationCompleted, userState);
        }
        
        private void OnDrillDownAddressQueryOperationCompleted(object arg) {
            if ((this.DrillDownAddressQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DrillDownAddressQueryCompleted(this, new DrillDownAddressQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/PostcodeMatch", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostcodeMatch(string sPostcode, string gazid, string envelope, string securityToken) {
            object[] results = this.Invoke("PostcodeMatch", new object[] {
                        sPostcode,
                        gazid,
                        envelope,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPostcodeMatch(string sPostcode, string gazid, string envelope, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PostcodeMatch", new object[] {
                        sPostcode,
                        gazid,
                        envelope,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPostcodeMatch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostcodeMatchAsync(string sPostcode, string gazid, string envelope, string securityToken) {
            this.PostcodeMatchAsync(sPostcode, gazid, envelope, securityToken, null);
        }
        
        /// <remarks/>
        public void PostcodeMatchAsync(string sPostcode, string gazid, string envelope, string securityToken, object userState) {
            if ((this.PostcodeMatchOperationCompleted == null)) {
                this.PostcodeMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostcodeMatchOperationCompleted);
            }
            this.InvokeAsync("PostcodeMatch", new object[] {
                        sPostcode,
                        gazid,
                        envelope,
                        securityToken}, this.PostcodeMatchOperationCompleted, userState);
        }
        
        private void OnPostcodeMatchOperationCompleted(object arg) {
            if ((this.PostcodeMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostcodeMatchCompleted(this, new PostcodeMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/PlaceNameMatch", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PlaceNameMatch(string sPlaceNameDescription, bool bFuzzy, long lPlaceNameSizeMax, long lPlaceNameSizeMin, string gazid, string envelope, int lMaxReturnRecords, string securityToken) {
            object[] results = this.Invoke("PlaceNameMatch", new object[] {
                        sPlaceNameDescription,
                        bFuzzy,
                        lPlaceNameSizeMax,
                        lPlaceNameSizeMin,
                        gazid,
                        envelope,
                        lMaxReturnRecords,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPlaceNameMatch(string sPlaceNameDescription, bool bFuzzy, long lPlaceNameSizeMax, long lPlaceNameSizeMin, string gazid, string envelope, int lMaxReturnRecords, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PlaceNameMatch", new object[] {
                        sPlaceNameDescription,
                        bFuzzy,
                        lPlaceNameSizeMax,
                        lPlaceNameSizeMin,
                        gazid,
                        envelope,
                        lMaxReturnRecords,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPlaceNameMatch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PlaceNameMatchAsync(string sPlaceNameDescription, bool bFuzzy, long lPlaceNameSizeMax, long lPlaceNameSizeMin, string gazid, string envelope, int lMaxReturnRecords, string securityToken) {
            this.PlaceNameMatchAsync(sPlaceNameDescription, bFuzzy, lPlaceNameSizeMax, lPlaceNameSizeMin, gazid, envelope, lMaxReturnRecords, securityToken, null);
        }
        
        /// <remarks/>
        public void PlaceNameMatchAsync(string sPlaceNameDescription, bool bFuzzy, long lPlaceNameSizeMax, long lPlaceNameSizeMin, string gazid, string envelope, int lMaxReturnRecords, string securityToken, object userState) {
            if ((this.PlaceNameMatchOperationCompleted == null)) {
                this.PlaceNameMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlaceNameMatchOperationCompleted);
            }
            this.InvokeAsync("PlaceNameMatch", new object[] {
                        sPlaceNameDescription,
                        bFuzzy,
                        lPlaceNameSizeMax,
                        lPlaceNameSizeMin,
                        gazid,
                        envelope,
                        lMaxReturnRecords,
                        securityToken}, this.PlaceNameMatchOperationCompleted, userState);
        }
        
        private void OnPlaceNameMatchOperationCompleted(object arg) {
            if ((this.PlaceNameMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlaceNameMatchCompleted(this, new PlaceNameMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/StreetMatch", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StreetMatch(string sStreetDescription, bool bFuzzy, string gazid, string envelope, int lMaxReturnRecords, string securityToken) {
            object[] results = this.Invoke("StreetMatch", new object[] {
                        sStreetDescription,
                        bFuzzy,
                        gazid,
                        envelope,
                        lMaxReturnRecords,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStreetMatch(string sStreetDescription, bool bFuzzy, string gazid, string envelope, int lMaxReturnRecords, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("StreetMatch", new object[] {
                        sStreetDescription,
                        bFuzzy,
                        gazid,
                        envelope,
                        lMaxReturnRecords,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndStreetMatch(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StreetMatchAsync(string sStreetDescription, bool bFuzzy, string gazid, string envelope, int lMaxReturnRecords, string securityToken) {
            this.StreetMatchAsync(sStreetDescription, bFuzzy, gazid, envelope, lMaxReturnRecords, securityToken, null);
        }
        
        /// <remarks/>
        public void StreetMatchAsync(string sStreetDescription, bool bFuzzy, string gazid, string envelope, int lMaxReturnRecords, string securityToken, object userState) {
            if ((this.StreetMatchOperationCompleted == null)) {
                this.StreetMatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStreetMatchOperationCompleted);
            }
            this.InvokeAsync("StreetMatch", new object[] {
                        sStreetDescription,
                        bFuzzy,
                        gazid,
                        envelope,
                        lMaxReturnRecords,
                        securityToken}, this.StreetMatchOperationCompleted, userState);
        }
        
        private void OnStreetMatchOperationCompleted(object arg) {
            if ((this.StreetMatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StreetMatchCompleted(this, new StreetMatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/FetchRecord", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FetchRecord(int recordtype, string recordid, string gazid, string envelope, string securityToken) {
            object[] results = this.Invoke("FetchRecord", new object[] {
                        recordtype,
                        recordid,
                        gazid,
                        envelope,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFetchRecord(int recordtype, string recordid, string gazid, string envelope, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FetchRecord", new object[] {
                        recordtype,
                        recordid,
                        gazid,
                        envelope,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFetchRecord(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FetchRecordAsync(int recordtype, string recordid, string gazid, string envelope, string securityToken) {
            this.FetchRecordAsync(recordtype, recordid, gazid, envelope, securityToken, null);
        }
        
        /// <remarks/>
        public void FetchRecordAsync(int recordtype, string recordid, string gazid, string envelope, string securityToken, object userState) {
            if ((this.FetchRecordOperationCompleted == null)) {
                this.FetchRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRecordOperationCompleted);
            }
            this.InvokeAsync("FetchRecord", new object[] {
                        recordtype,
                        recordid,
                        gazid,
                        envelope,
                        securityToken}, this.FetchRecordOperationCompleted, userState);
        }
        
        private void OnFetchRecordOperationCompleted(object arg) {
            if ((this.FetchRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchRecordCompleted(this, new FetchRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/FetchAddressAlias", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FetchAddressAlias(string recordid, string gazid, string envelope, string securityToken) {
            object[] results = this.Invoke("FetchAddressAlias", new object[] {
                        recordid,
                        gazid,
                        envelope,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginFetchAddressAlias(string recordid, string gazid, string envelope, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("FetchAddressAlias", new object[] {
                        recordid,
                        gazid,
                        envelope,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndFetchAddressAlias(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAddressAliasAsync(string recordid, string gazid, string envelope, string securityToken) {
            this.FetchAddressAliasAsync(recordid, gazid, envelope, securityToken, null);
        }
        
        /// <remarks/>
        public void FetchAddressAliasAsync(string recordid, string gazid, string envelope, string securityToken, object userState) {
            if ((this.FetchAddressAliasOperationCompleted == null)) {
                this.FetchAddressAliasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchAddressAliasOperationCompleted);
            }
            this.InvokeAsync("FetchAddressAlias", new object[] {
                        recordid,
                        gazid,
                        envelope,
                        securityToken}, this.FetchAddressAliasOperationCompleted, userState);
        }
        
        private void OnFetchAddressAliasOperationCompleted(object arg) {
            if ((this.FetchAddressAliasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchAddressAliasCompleted(this, new FetchAddressAliasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/GetServiceRestriction", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceRestriction(string gazID, string SecurityToken) {
            object[] results = this.Invoke("GetServiceRestriction", new object[] {
                        gazID,
                        SecurityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetServiceRestriction(string gazID, string SecurityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetServiceRestriction", new object[] {
                        gazID,
                        SecurityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetServiceRestriction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceRestrictionAsync(string gazID, string SecurityToken) {
            this.GetServiceRestrictionAsync(gazID, SecurityToken, null);
        }
        
        /// <remarks/>
        public void GetServiceRestrictionAsync(string gazID, string SecurityToken, object userState) {
            if ((this.GetServiceRestrictionOperationCompleted == null)) {
                this.GetServiceRestrictionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceRestrictionOperationCompleted);
            }
            this.InvokeAsync("GetServiceRestriction", new object[] {
                        gazID,
                        SecurityToken}, this.GetServiceRestrictionOperationCompleted, userState);
        }
        
        private void OnGetServiceRestrictionOperationCompleted(object arg) {
            if ((this.GetServiceRestrictionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceRestrictionCompleted(this, new GetServiceRestrictionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/PostcodeGeocode", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostcodeGeocode(string sPostcode, string gazid, string envelope, string securityToken) {
            object[] results = this.Invoke("PostcodeGeocode", new object[] {
                        sPostcode,
                        gazid,
                        envelope,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPostcodeGeocode(string sPostcode, string gazid, string envelope, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PostcodeGeocode", new object[] {
                        sPostcode,
                        gazid,
                        envelope,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPostcodeGeocode(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostcodeGeocodeAsync(string sPostcode, string gazid, string envelope, string securityToken) {
            this.PostcodeGeocodeAsync(sPostcode, gazid, envelope, securityToken, null);
        }
        
        /// <remarks/>
        public void PostcodeGeocodeAsync(string sPostcode, string gazid, string envelope, string securityToken, object userState) {
            if ((this.PostcodeGeocodeOperationCompleted == null)) {
                this.PostcodeGeocodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostcodeGeocodeOperationCompleted);
            }
            this.InvokeAsync("PostcodeGeocode", new object[] {
                        sPostcode,
                        gazid,
                        envelope,
                        securityToken}, this.PostcodeGeocodeOperationCompleted, userState);
        }
        
        private void OnPostcodeGeocodeOperationCompleted(object arg) {
            if ((this.PostcodeGeocodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostcodeGeocodeCompleted(this, new PostcodeGeocodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.esriuk.com/gazops/AddressGeocodeNI", RequestNamespace="http://www.esriuk.com/gazops", ResponseNamespace="http://www.esriuk.com/gazops", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddressGeocodeNI(string sAddress, string gazid, bool bFuzzyMatch, string envelope, string securityToken) {
            object[] results = this.Invoke("AddressGeocodeNI", new object[] {
                        sAddress,
                        gazid,
                        bFuzzyMatch,
                        envelope,
                        securityToken});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddressGeocodeNI(string sAddress, string gazid, bool bFuzzyMatch, string envelope, string securityToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddressGeocodeNI", new object[] {
                        sAddress,
                        gazid,
                        bFuzzyMatch,
                        envelope,
                        securityToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddressGeocodeNI(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddressGeocodeNIAsync(string sAddress, string gazid, bool bFuzzyMatch, string envelope, string securityToken) {
            this.AddressGeocodeNIAsync(sAddress, gazid, bFuzzyMatch, envelope, securityToken, null);
        }
        
        /// <remarks/>
        public void AddressGeocodeNIAsync(string sAddress, string gazid, bool bFuzzyMatch, string envelope, string securityToken, object userState) {
            if ((this.AddressGeocodeNIOperationCompleted == null)) {
                this.AddressGeocodeNIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddressGeocodeNIOperationCompleted);
            }
            this.InvokeAsync("AddressGeocodeNI", new object[] {
                        sAddress,
                        gazid,
                        bFuzzyMatch,
                        envelope,
                        securityToken}, this.AddressGeocodeNIOperationCompleted, userState);
        }
        
        private void OnAddressGeocodeNIOperationCompleted(object arg) {
            if ((this.AddressGeocodeNICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddressGeocodeNICompleted(this, new AddressGeocodeNICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubscriptionInformationURLCompletedEventHandler(object sender, SubscriptionInformationURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscriptionInformationURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscriptionInformationURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ListGazetteersCompletedEventHandler(object sender, ListGazetteersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGazetteersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGazetteersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LoginServiceURLCompletedEventHandler(object sender, LoginServiceURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginServiceURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginServiceURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DriverCapabilitiesCompletedEventHandler(object sender, DriverCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DriverCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DriverCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DrillDownAddressQueryCompletedEventHandler(object sender, DrillDownAddressQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DrillDownAddressQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DrillDownAddressQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostcodeMatchCompletedEventHandler(object sender, PostcodeMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostcodeMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostcodeMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PlaceNameMatchCompletedEventHandler(object sender, PlaceNameMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlaceNameMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlaceNameMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StreetMatchCompletedEventHandler(object sender, StreetMatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StreetMatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StreetMatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FetchRecordCompletedEventHandler(object sender, FetchRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void FetchAddressAliasCompletedEventHandler(object sender, FetchAddressAliasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAddressAliasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchAddressAliasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetServiceRestrictionCompletedEventHandler(object sender, GetServiceRestrictionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceRestrictionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceRestrictionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PostcodeGeocodeCompletedEventHandler(object sender, PostcodeGeocodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostcodeGeocodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostcodeGeocodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddressGeocodeNICompletedEventHandler(object sender, AddressGeocodeNICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddressGeocodeNICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddressGeocodeNICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591