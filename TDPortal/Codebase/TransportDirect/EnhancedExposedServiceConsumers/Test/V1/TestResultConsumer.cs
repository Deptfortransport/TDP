//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2300
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2300.
// 
namespace TransportDirect.EnhancedExposedServiceConsumers.JourneyConsumer.V1 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NunitServiceSoap", Namespace="http://tempuri.org/")]
    public class TestJourneyResultConsumerWse : Microsoft.Web.Services3.WebServicesClientProtocol {
        
        /// <remarks/>
        public TestJourneyResultConsumerWse() {
            this.Url = "http://localhost/ExposedServicesTestToolClient/webservices/nunitservice.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoapTransaction GetTransaction(string transactionId) {
            object[] results = this.Invoke("GetTransaction", new object[] {
                        transactionId});
            return ((SoapTransaction)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransaction(string transactionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransaction", new object[] {
                        transactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SoapTransaction EndGetTransaction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SoapTransaction)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTransaction(string transactionId) {
            this.Invoke("DeleteTransaction", new object[] {
                        transactionId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTransaction(string transactionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTransaction", new object[] {
                        transactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteTransaction(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidResponse(string transactionId) {
            object[] results = this.Invoke("IsValidResponse", new object[] {
                        transactionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsValidResponse(string transactionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsValidResponse", new object[] {
                        transactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsValidResponse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NunitServiceSoap", Namespace="http://tempuri.org/")]
    public class TestJourneyResultConsumer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public TestJourneyResultConsumer() {
            this.Url = "http://localhost/ExposedServicesTestToolClient/webservices/nunitservice.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoapTransaction GetTransaction(string transactionId) {
            object[] results = this.Invoke("GetTransaction", new object[] {
                        transactionId});
            return ((SoapTransaction)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTransaction(string transactionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTransaction", new object[] {
                        transactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SoapTransaction EndGetTransaction(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SoapTransaction)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTransaction(string transactionId) {
            this.Invoke("DeleteTransaction", new object[] {
                        transactionId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteTransaction(string transactionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteTransaction", new object[] {
                        transactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteTransaction(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsValidResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidResponse(string transactionId) {
            object[] results = this.Invoke("IsValidResponse", new object[] {
                        transactionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIsValidResponse(string transactionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("IsValidResponse", new object[] {
                        transactionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndIsValidResponse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class SoapTransaction {
        
        /// <remarks/>
        public SoapRequest SoapRequest;
        
        /// <remarks/>
        public SoapResponse SoapResponse;
        
        /// <remarks/>
        public Status StatusEnum;
        
        /// <remarks/>
        public string TransactionId;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class SoapRequest {
        
        /// <remarks/>
        public string TransactionId;
        
        /// <remarks/>
        public string SoapMessage;
        
        /// <remarks/>
        public Webservice WebService;
        
        /// <remarks/>
        public System.DateTime DateRequested;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class Webservice {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string WsdlPath;
        
        /// <remarks/>
        public string SoapHeaderPath;
        
        /// <remarks/>
        public string Uri;
        
        /// <remarks/>
        public WebServiceMethod[] WebServiceMethods;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class WebServiceMethod {
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string SoapAction;
        
        /// <remarks/>
        public string MethodNamespace;
        
        /// <remarks/>
        public string OutputPage;
        
        /// <remarks/>
        public bool IsAsync;
        
        /// <remarks/>
        public string XsltPath;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public class SoapResponse {
        
        /// <remarks/>
        public string TransactionId;
        
        /// <remarks/>
        public string SoapMessage;
        
        /// <remarks/>
        public Webservice WebService;
        
        /// <remarks/>
        public System.DateTime DateReceived;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum Status {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Created,
        
        /// <remarks/>
        Pending,
        
        /// <remarks/>
        Received,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        All,
    }
}
