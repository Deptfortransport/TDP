//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.1.4322.2032.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="OtaBookmarkSenderSoapBinding", Namespace="http://www.kizoom.com/otabookmarkwebservice")]
public class OtaBookmarkSenderService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    /// <remarks/>
    public OtaBookmarkSenderService() {
       this.Url = "http://sms.kizoom.co.uk/axis/services/OtaBookmarkSender";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.kizoom.com/otabookmarkwebservice", ResponseNamespace="http://www.kizoom.com/otabookmarkwebservice")]
    public void sendWapPushBookmark(string username, string account, string msisdn, string url, string subject) {
        this.Invoke("sendWapPushBookmark", new object[] {
                    username,
                    account,
                    msisdn,
                    url,
                    subject});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsendWapPushBookmark(string username, string account, string msisdn, string url, string subject, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("sendWapPushBookmark", new object[] {
                    username,
                    account,
                    msisdn,
                    url,
                    subject}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsendWapPushBookmark(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.kizoom.com/otabookmarkwebservice", ResponseNamespace="http://www.kizoom.com/otabookmarkwebservice")]
    public void sendNokiaOtaBookmark(string username, string account, string msisdn, string url, string subject) {
        this.Invoke("sendNokiaOtaBookmark", new object[] {
                    username,
                    account,
                    msisdn,
                    url,
                    subject});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsendNokiaOtaBookmark(string username, string account, string msisdn, string url, string subject, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("sendNokiaOtaBookmark", new object[] {
                    username,
                    account,
                    msisdn,
                    url,
                    subject}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsendNokiaOtaBookmark(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://www.kizoom.com/otabookmarkwebservice", ResponseNamespace="http://www.kizoom.com/otabookmarkwebservice")]
    public void sendBookmarkAsPlainText(string username, string account, string msisdn, string body) {
        this.Invoke("sendBookmarkAsPlainText", new object[] {
                    username,
                    account,
                    msisdn,
                    body});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsendBookmarkAsPlainText(string username, string account, string msisdn, string body, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("sendBookmarkAsPlainText", new object[] {
                    username,
                    account,
                    msisdn,
                    body}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsendBookmarkAsPlainText(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
}
