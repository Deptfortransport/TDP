//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2300
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2300.
// 
namespace TransportDirect.EnhancedExposedServices.DepartureBoard.V1.Test
{
	using System.Diagnostics;
	using System.Xml.Serialization;
	using System;
	using System.Web.Services.Protocols;
	using System.ComponentModel;
	using System.Web.Services;
    
    
	/// <remarks/>
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="DepartureBoardServiceSoap", Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class TestDepartureBoardServiceWse : Microsoft.Web.Services3.WebServicesClientProtocol 
	{
        
		/// <remarks/>
		public TestDepartureBoardServiceWse() 
		{
			this.Url = "http://localhost/EnhancedExposedServices/DepartureBoard/V1/DepartureBoardService." +
				"asmx";
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1/GetDepartureBoard", RequestNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", ResponseNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public DepartureBoardServiceStopInformation[] GetDepartureBoard(string transactionId, string language, DepartureBoardServiceRequest departureBoardRequest) 
		{
			object[] results = this.Invoke("GetDepartureBoard", new object[] {
																				 transactionId,
																				 language,
																				 departureBoardRequest});
			return ((DepartureBoardServiceStopInformation[])(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetDepartureBoard(string transactionId, string language, DepartureBoardServiceRequest departureBoardRequest, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetDepartureBoard", new object[] {
																		  transactionId,
																		  language,
																		  departureBoardRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public DepartureBoardServiceStopInformation[] EndGetDepartureBoard(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((DepartureBoardServiceStopInformation[])(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1/GetDepartureBoardTimeRe" +
			 "questTypes", RequestNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", ResponseNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public DepartureBoardServiceTimeRequestType[] GetDepartureBoardTimeRequestTypes(string transactionId, string language) 
		{
			object[] results = this.Invoke("GetDepartureBoardTimeRequestTypes", new object[] {
																								 transactionId,
																								 language});
			return ((DepartureBoardServiceTimeRequestType[])(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetDepartureBoardTimeRequestTypes(string transactionId, string language, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetDepartureBoardTimeRequestTypes", new object[] {
																						  transactionId,
																						  language}, callback, asyncState);
		}
        
		/// <remarks/>
		public DepartureBoardServiceTimeRequestType[] EndGetDepartureBoardTimeRequestTypes(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((DepartureBoardServiceTimeRequestType[])(results[0]));
		}
	}
    
	/// <remarks/>
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[System.Web.Services.WebServiceBindingAttribute(Name="DepartureBoardServiceSoap", Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardService : System.Web.Services.Protocols.SoapHttpClientProtocol 
	{
        
		/// <remarks/>
		public DepartureBoardService() 
		{
			this.Url = "http://localhost/EnhancedExposedServices/DepartureBoard/V1/DepartureBoardService." +
				"asmx";
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1/GetDepartureBoard", RequestNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", ResponseNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public DepartureBoardServiceStopInformation[] GetDepartureBoard(string transactionId, string language, DepartureBoardServiceRequest departureBoardRequest) 
		{
			object[] results = this.Invoke("GetDepartureBoard", new object[] {
																				 transactionId,
																				 language,
																				 departureBoardRequest});
			return ((DepartureBoardServiceStopInformation[])(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetDepartureBoard(string transactionId, string language, DepartureBoardServiceRequest departureBoardRequest, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetDepartureBoard", new object[] {
																		  transactionId,
																		  language,
																		  departureBoardRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public DepartureBoardServiceStopInformation[] EndGetDepartureBoard(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((DepartureBoardServiceStopInformation[])(results[0]));
		}
        
		/// <remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1/GetDepartureBoardTimeRe" +
			 "questTypes", RequestNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", ResponseNamespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public DepartureBoardServiceTimeRequestType[] GetDepartureBoardTimeRequestTypes(string transactionId, string language) 
		{
			object[] results = this.Invoke("GetDepartureBoardTimeRequestTypes", new object[] {
																								 transactionId,
																								 language});
			return ((DepartureBoardServiceTimeRequestType[])(results[0]));
		}
        
		/// <remarks/>
		public System.IAsyncResult BeginGetDepartureBoardTimeRequestTypes(string transactionId, string language, System.AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetDepartureBoardTimeRequestTypes", new object[] {
																						  transactionId,
																						  language}, callback, asyncState);
		}
        
		/// <remarks/>
		public DepartureBoardServiceTimeRequestType[] EndGetDepartureBoardTimeRequestTypes(System.IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((DepartureBoardServiceTimeRequestType[])(results[0]));
		}
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceRequest 
	{
        
		/// <remarks/>
		public DepartureBoardServiceLocation OriginLocation;
        
		/// <remarks/>
		public DepartureBoardServiceLocation DestinationLocation;
        
		/// <remarks/>
		public DepartureBoardServiceTimeRequest JourneyTimeInformation;
        
		/// <remarks/>
		public DepartureBoardServiceRangeType RangeType;
        
		/// <remarks/>
		public int Range;
        
		/// <remarks/>
		public bool ShowDepartures;
        
		/// <remarks/>
		public string ServiceNumber;
        
		/// <remarks/>
		public bool ShowCallingStops;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceLocation 
	{
        
		/// <remarks/>
		public string[] NaptanIds;
        
		/// <remarks/>
		public string Locality;
        
		/// <remarks/>
		public string Code;
        
		/// <remarks/>
		public DepartureBoardServiceCodeType Type;
        
		/// <remarks/>
		public bool Valid;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceCodeType 
	{
        
		/// <remarks/>
		CRS,
        
		/// <remarks/>
		SMS,
        
		/// <remarks/>
		IATA,
        
		/// <remarks/>
		Postcode,
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceItinerary 
	{
        
		/// <remarks/>
		public string OperatorCode;
        
		/// <remarks/>
		public string OperatorName;
        
		/// <remarks/>
		public string ServiceNumber;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceStop 
	{
        
		/// <remarks/>
		public string NaptanId;
        
		/// <remarks/>
		public string Name;
        
		/// <remarks/>
		public string ShortCode;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	[System.Xml.Serialization.XmlIncludeAttribute(typeof(DepartureBoardServiceTrainRealTime))]
	public class DepartureBoardServiceRealTime 
	{
        
		/// <remarks/>
		public System.DateTime DepartTime;
        
		/// <remarks/>
		public DepartureBoardServiceRealTimeType DepartTimeType;
        
		/// <remarks/>
		public System.DateTime ArriveTime;
        
		/// <remarks/>
		public DepartureBoardServiceRealTimeType ArriveTimeType;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceRealTimeType 
	{
        
		/// <remarks/>
		Recorded,
        
		/// <remarks/>
		Estimated,
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceTrainRealTime : DepartureBoardServiceRealTime 
	{
        
		/// <remarks/>
		public bool Delayed;
        
		/// <remarks/>
		public bool Uncertain;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceInformation 
	{
        
		/// <remarks/>
		public DepartureBoardServiceActivityType ActivityType;
        
		/// <remarks/>
		public System.DateTime DepartTime;
        
		/// <remarks/>
		public System.DateTime ArriveTime;
        
		/// <remarks/>
		public DepartureBoardServiceRealTime RealTime;
        
		/// <remarks/>
		public DepartureBoardServiceStop Stop;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceActivityType 
	{
        
		/// <remarks/>
		Arrive,
        
		/// <remarks/>
		Depart,
        
		/// <remarks/>
		ArriveDepart,
        
		/// <remarks/>
		Unavailable,
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceStopInformation 
	{
        
		/// <remarks/>
		public DepartureBoardServiceCallingStopStatus CallingStopStatus;
        
		/// <remarks/>
		public DepartureBoardServiceInformation Departure;
        
		/// <remarks/>
		public DepartureBoardServiceInformation[] PreviousIntermediates;
        
		/// <remarks/>
		public DepartureBoardServiceInformation Stop;
        
		/// <remarks/>
		public DepartureBoardServiceInformation[] OnwardIntermediates;
        
		/// <remarks/>
		public DepartureBoardServiceInformation Arrival;
        
		/// <remarks/>
		public DepartureBoardServiceItinerary Service;
        
		/// <remarks/>
		public DepartureBoardServiceType Mode;
        
		/// <remarks/>
		public bool CircularRoute;
        
		/// <remarks/>
		public string FalseDestination;
        
		/// <remarks/>
		public string Via;
        
		/// <remarks/>
		public bool Cancelled;
        
		/// <remarks/>
		public string CancellationReason;
        
		/// <remarks/>
		public string LateReason;
        
		/// <remarks/>
		public bool HasTrainDetails;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceCallingStopStatus 
	{
        
		/// <remarks/>
		Unknown,
        
		/// <remarks/>
		HasCallingStops,
        
		/// <remarks/>
		NoCallingStops,
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceType 
	{
        
		/// <remarks/>
		Train,
        
		/// <remarks/>
		BusCoach,
        
		/// <remarks/>
		Flight,
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public class DepartureBoardServiceTimeRequest 
	{
        
		/// <remarks/>
		public DepartureBoardServiceTimeRequestType Type;
        
		/// <remarks/>
		public int Hour;
        
		/// <remarks/>
		public int Minute;
	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceTimeRequestType 
	{
        
		/// <remarks/>
		Now,
        
		/// <remarks/>
		Last,
        
		/// <remarks/>
		First,
        
		/// <remarks/>
		TimeToday,
        
		/// <remarks/>
		TimeTomorrow,
        LastToday,
        LastTomorrow,
        FirstToday,
        FirstTomorrow,

	}
    
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.transportdirect.info/TransportDirect.EnhancedExposedServices.DepartureBoard.V1")]
	public enum DepartureBoardServiceRangeType 
	{
        
		/// <remarks/>
		Sequence,
        
		/// <remarks/>
		Interval,
	}
}
