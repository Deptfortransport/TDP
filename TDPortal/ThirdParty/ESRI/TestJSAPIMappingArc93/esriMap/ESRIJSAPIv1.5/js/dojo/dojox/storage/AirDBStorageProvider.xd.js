/*
	Copyright (c) 2004-2009, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


dojo._xdResourceLoaded(function(_1,_2,_3){return {depends:[["provide","dojox.storage.AirDBStorageProvider"],["require","dojox.storage.manager"],["require","dojox.storage.Provider"]],defineResource:function(_4,_5,_6){if(!_4._hasResource["dojox.storage.AirDBStorageProvider"]){_4._hasResource["dojox.storage.AirDBStorageProvider"]=true;_4.provide("dojox.storage.AirDBStorageProvider");_4.require("dojox.storage.manager");_4.require("dojox.storage.Provider");if(_4.isAIR){(function(){if(!_7){var _7={};}_7.File=window.runtime.flash.filesystem.File;_7.SQLConnection=window.runtime.flash.data.SQLConnection;_7.SQLStatement=window.runtime.flash.data.SQLStatement;_4.declare("dojox.storage.AirDBStorageProvider",[_6.storage.Provider],{DATABASE_FILE:"dojo.db",TABLE_NAME:"__DOJO_STORAGE",initialized:false,_db:null,initialize:function(){this.initialized=false;try{this._db=new _7.SQLConnection();this._db.open(_7.File.applicationStorageDirectory.resolvePath(this.DATABASE_FILE));this._sql("CREATE TABLE IF NOT EXISTS "+this.TABLE_NAME+"(namespace TEXT, key TEXT, value TEXT)");this._sql("CREATE UNIQUE INDEX IF NOT EXISTS namespace_key_index ON "+this.TABLE_NAME+" (namespace, key)");this.initialized=true;}catch(e){console.debug("dojox.storage.AirDBStorageProvider.initialize:",e);}_6.storage.manager.loaded();},_sql:function(_8,_9){var _a=new _7.SQLStatement();_a.sqlConnection=this._db;_a.text=_8;if(_9){for(var _b in _9){_a.parameters[_b]=_9[_b];}}_a.execute();return _a.getResult();},_beginTransaction:function(){this._db.begin();},_commitTransaction:function(){this._db.commit();},isAvailable:function(){return true;},put:function(_c,_d,_e,_f){if(this.isValidKey(_c)==false){throw new Error("Invalid key given: "+_c);}_f=_f||this.DEFAULT_NAMESPACE;if(this.isValidKey(_f)==false){throw new Error("Invalid namespace given: "+_f);}try{this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_f,":key":_c});this._sql("INSERT INTO "+this.TABLE_NAME+" VALUES (:namespace, :key, :value)",{":namespace":_f,":key":_c,":value":_d});}catch(e){console.debug("dojox.storage.AirDBStorageProvider.put:",e);_e(this.FAILED,_c,e.toString());return;}if(_e){_e(this.SUCCESS,_c,null,_f);}},get:function(key,_11){if(this.isValidKey(key)==false){throw new Error("Invalid key given: "+key);}_11=_11||this.DEFAULT_NAMESPACE;var _12=this._sql("SELECT * FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_11,":key":key});if(_12.data&&_12.data.length){return _12.data[0].value;}return null;},getNamespaces:function(){var _13=[this.DEFAULT_NAMESPACE];var rs=this._sql("SELECT namespace FROM "+this.TABLE_NAME+" DESC GROUP BY namespace");if(rs.data){for(var i=0;i<rs.data.length;i++){if(rs.data[i].namespace!=this.DEFAULT_NAMESPACE){_13.push(rs.data[i].namespace);}}}return _13;},getKeys:function(_16){_16=_16||this.DEFAULT_NAMESPACE;if(this.isValidKey(_16)==false){throw new Error("Invalid namespace given: "+_16);}var _17=[];var rs=this._sql("SELECT key FROM "+this.TABLE_NAME+" WHERE namespace = :namespace",{":namespace":_16});if(rs.data){for(var i=0;i<rs.data.length;i++){_17.push(rs.data[i].key);}}return _17;},clear:function(_1a){if(this.isValidKey(_1a)==false){throw new Error("Invalid namespace given: "+_1a);}this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace",{":namespace":_1a});},remove:function(key,_1c){_1c=_1c||this.DEFAULT_NAMESPACE;this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_1c,":key":key});},putMultiple:function(_1d,_1e,_1f,_20){if(this.isValidKeyArray(_1d)===false||!_1e instanceof Array||_1d.length!=_1e.length){throw new Error("Invalid arguments: keys = ["+_1d+"], values = ["+_1e+"]");}if(_20==null||typeof _20=="undefined"){_20=this.DEFAULT_NAMESPACE;}if(this.isValidKey(_20)==false){throw new Error("Invalid namespace given: "+_20);}this._statusHandler=_1f;try{this._beginTransaction();for(var i=0;i<_1d.length;i++){this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_20,":key":_1d[i]});this._sql("INSERT INTO "+this.TABLE_NAME+" VALUES (:namespace, :key, :value)",{":namespace":_20,":key":_1d[i],":value":_1e[i]});}this._commitTransaction();}catch(e){console.debug("dojox.storage.AirDBStorageProvider.putMultiple:",e);if(_1f){_1f(this.FAILED,_1d,e.toString(),_20);}return;}if(_1f){_1f(this.SUCCESS,_1d,null);}},getMultiple:function(_22,_23){if(this.isValidKeyArray(_22)===false){throw new Error("Invalid key array given: "+_22);}if(_23==null||typeof _23=="undefined"){_23=this.DEFAULT_NAMESPACE;}if(this.isValidKey(_23)==false){throw new Error("Invalid namespace given: "+_23);}var _24=[];for(var i=0;i<_22.length;i++){var _26=this._sql("SELECT * FROM "+this.TABLE_NAME+" WHERE namespace = :namespace AND key = :key",{":namespace":_23,":key":_22[i]});_24[i]=_26.data&&_26.data.length?_26.data[0].value:null;}return _24;},removeMultiple:function(_27,_28){_28=_28||this.DEFAULT_NAMESPACE;this._beginTransaction();for(var i=0;i<_27.length;i++){this._sql("DELETE FROM "+this.TABLE_NAME+" WHERE namespace = namespace = :namespace AND key = :key",{":namespace":_28,":key":_27[i]});}this._commitTransaction();},isPermanent:function(){return true;},getMaximumSize:function(){return this.SIZE_NO_LIMIT;},hasSettingsUI:function(){return false;},showSettingsUI:function(){throw new Error(this.declaredClass+" does not support a storage settings user-interface");},hideSettingsUI:function(){throw new Error(this.declaredClass+" does not support a storage settings user-interface");}});_6.storage.manager.register("dojox.storage.AirDBStorageProvider",new _6.storage.AirDBStorageProvider());_6.storage.manager.initialize();})();}}}};});