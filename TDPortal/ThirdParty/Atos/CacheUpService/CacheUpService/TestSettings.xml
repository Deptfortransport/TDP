<?xml version="1.0" encoding="utf-8" ?>
<lookup>
  <!-- Property service -->
  <property name="propertyservice.version" AID="CacheUp">1</property>
  <property name="propertyservice.refreshrateseconds" AID="CacheUp">1</property>

  <!-- App id -->
  <property name="propertyservice.applicationid" AID="CacheUp">CacheUp</property>

  <property name="Logging.Publisher.Queue" AID="CacheUp"></property>

  <property name="Logging.Publisher.Custom" AID="CacheUp"></property>
  <property name="Logging.Publisher.File" AID="CacheUp">File1</property>
  <property name="Logging.Publisher.File.File1.Directory" AID="CacheUp">D:\TDPortal\</property>
  <property name="Logging.Publisher.File.File1.Rotation" AID="CacheUp">10000</property>

  <property name="Logging.Publisher.EventLog" AID="CacheUp">EventLog1</property>
  <property name="Logging.Publisher.EventLog.EventLog1.Name" AID="CacheUp">Application</property>
  <property name="Logging.Publisher.EventLog.EventLog1.Machine" AID="CacheUp">.</property>
  <property name="Logging.Publisher.EventLog.EventLog1.Source" AID="CacheUp">CacheUpService</property>

  <property name="Logging.Publisher.Console" AID="CacheUp"></property>

  <property name="Logging.Publisher.Default" AID="CacheUp">File1</property>

  <property name="Logging.Event.Custom.Trace" AID="CacheUp">Off</property>
  <property name="Logging.Event.Custom" AID="CacheUp"></property>

  <property name="Logging.Event.Operational.TraceLevel" AID="CacheUp">Verbose</property>

  <property name="Logging.Event.Operational.Verbose.Publishers" AID="CacheUp">File1</property>
  <property name="Logging.Event.Operational.Info.Publishers" AID="CacheUp">File1 EventLog1</property>
  <property name="Logging.Event.Operational.Error.Publishers" AID="CacheUp">File1 EventLog1</property>
  <property name="Logging.Event.Operational.Warning.Publishers" AID="CacheUp">File1 EventLog1</property>

  <!--
  If the polling interval in seconds is set to 0, the service will exit after one iteration
  This is mostly useful if the program is run from the command line with the flag '-c' applied
  for console mode.
  
  -->
  <property name="CacheUpService.PollingIntervalSeconds" AID="CacheUp">60</property>

  <!--
  Properties are used to configure the URLs. This property is prefixed with "CacheUpService.Url.[ID].".
  The CacheUpService.Urls property determines which Url IDs to load.

  The following items can be configured for an individual URL
  Name              Required string attribute. The name of the test, this is prefixed to all messages 
                    logged for the URL
  UrlAddress        Required string attribute. The fully qualified address to check
  AcceptedCodes     Required string attribute. A space delimited list of response codes that indicate success.
                    Some codes will result in exceptions, such as 404 - which can not be used for matching
                    purposes. These codes will always result in a failure of the request.
  RetryCodes        Optional string attribute. A space delimited list of response codes that can allow 
                    a single retry attempt. 
                    This must be set to 401 for a URL which requires authentication because the first attempt 
                    will fail with a 401 unauthorised exception, the retry will then reuse the returned cookie 
                    collection which will then contain the "authenticated" credentials that will then allow 
                    the retry to succeed (assuming there are no other failures).
  FollowRedirect    Optional boolean, default is True. If the request should automatically follow a redirect. 
                    Recommended to be set to True for page-scan.
  RetainCookies     Optional boolean, default is False. If a cookie given from previous request should be used in
                    the next request.
  Severity          Optional string, default is Error. The severity of a failed request. 
                    Can be one out of: Error, Warning, Info
                    These represents: 1, 2, 3 in the exit codes if run as a command line.
  TimeoutSeconds    Optional integer, default is 30 seconds. The time that a request waits for completion.
  PageScan          Optional string, no default. A regex that should either be matched or not matched in the page.
  PageScanPositive  Optional boolean, default is True. If a positive page scan match is successful. If set to False
                    the page scan match has to not match.
                    
  Username          Optional string. If given, the username is used for authentication.
  Password          Optional string. If given, used for authentication if username was given
  Domain            Optional string. If given, used for authentication if username was given
  AuthType          Optional string. If given, used for authentication if username was given, e.g. Basic
  
  ActionClass       Optional string. The fully qualified class name to be used after the URL check has been made. 
  ActionAssembly    Optional string. optionally assembly that is 
                    If assembly is not given, it is presumed to be the cache up service assembly
  ActionSettingsId  Optional string. The action settings set id to use for the action class.
                    If not provided or the set id is missing, the default action settings set is used.
                    Example:
                    ActionClass      WT.CacheUpService.TakeOffLine
                    ActionAssembly   WT.CacheUpService
                    ActionSettingsId 0
  
  -->

  <!-- 
  Settings for the TakeOfflineAction.
    The default settings set has no id, e.g. TakeOffline.
    For each new settings set, append an id, e.g. TakeOffline0.
    
  TakeOffline.File.OnlineFile         Mandatory string. The name of the file to change
  TakeOffline.File.OfflineFile        Mandatory string. The name of the file to change the name too
  TakeOffline.PutOnline               Optional boolean. If set to True, the name of the file is moved back to 
                                      online again once it is back to successful. Default is false.
  TakeOffline.OnlyIf                  Optional boolean. If set to True, the service will be put back online if TakeOffline was the one
                                      who took it offline.  Default is true. Otherwise, it will put it back online regardless.
  TakeOffline.AllowedSuccessFailures  Optional number. Can not be negative. The number of success or failures that
                                      have to occur after each other before it is put online or offline.
  -->

  <property name="CacheUpService.Urls" AID="CacheUp">HP,RH,EES</property>

  
  <property name="CacheUpService.Url.HP.Name" AID="CacheUp">[Homepage] </property>
  <property name="CacheUpService.Url.HP.UrlAddress" AID="CacheUp">http://localhost/web2/home.aspx</property>
  <property name="CacheUpService.Url.HP.AcceptedCodes" AID="CacheUp">200</property>
  <property name="CacheUpService.Url.HP.RetainCookies" AID="CacheUp">false</property>
  <property name="CacheUpService.Url.HP.TimeoutSeconds" AID="CacheUp">60</property>
  <property name="CacheUpService.Url.HP.ActionClass" AID="CacheUp">WT.CacheUpService.TakeOfflineAction</property>
  <property name="CacheUpService.Url.HP.ActionSettingsId" AID="CacheUp">HP</property>
  
  <property name="TakeOfflineHP.File.OnlineFile" AID="CacheUp">D:\Temp\test.txt</property>
  <property name="TakeOfflineHP.File.OfflineFile" AID="CacheUp">D:\Temp\offline-test.txt</property>
  <property name="TakeOfflineHP.PutOnline" AID="CacheUp">True</property>
  <property name="TakeOfflineHP.OnlyIf" AID="CacheUp">True</property>
  <property name="TakeOfflineHP.AllowedSuccessFailures" AID="CacheUp">3</property>

  
  <property name="CacheUpService.Url.RH.Name" AID="CacheUp">[RemotingHost] </property>
  <property name="CacheUpService.Url.RH.UrlAddress" AID="CacheUp">http://localhost/TDRemotingHost/Default.aspx</property>
  <property name="CacheUpService.Url.RH.AcceptedCodes" AID="CacheUp">200 500</property>
  <property name="CacheUpService.Url.RH.RetainCookies" AID="CacheUp">false</property>
  <property name="CacheUpService.Url.RH.TimeoutSeconds" AID="CacheUp">60</property>
  <property name="CacheUpService.Url.RH.ActionClass" AID="CacheUp">WT.CacheUpService.TakeOfflineAction</property>
  <property name="CacheUpService.Url.RH.ActionSettingsId" AID="CacheUp">HP</property>

  <property name="TakeOfflineRH.File.OnlineFile" AID="CacheUp">D:\Temp\test1.txt</property>
  <property name="TakeOfflineRH.File.OfflineFile" AID="CacheUp">D:\Temp\offline-test1.txt</property>
  <property name="TakeOfflineRH.PutOnline" AID="CacheUp">True</property>
  <property name="TakeOfflineRH.OnlyIf" AID="CacheUp">True</property>
  <property name="TakeOfflineRH.AllowedSuccessFailures" AID="CacheUp">3</property>
  
  
  <property name="CacheUpService.Url.EES.Name" AID="CacheUp">[EES] </property>
  <property name="CacheUpService.Url.EES.UrlAddress" AID="CacheUp">http://localhost/enhancedexposedservices/codehandler/v1/codeservice.asmx</property>
  <property name="CacheUpService.Url.EES.AcceptedCodes" AID="CacheUp">200</property>
  <property name="CacheUpService.Url.EES.RetainCookies" AID="CacheUp">false</property>
  <property name="CacheUpService.Url.EES.TimeoutSeconds" AID="CacheUp">60</property>
  <property name="CacheUpService.Url.EES.ActionClass" AID="CacheUp">WT.CacheUpService.TakeOfflineAction</property>
  <property name="CacheUpService.Url.EES.ActionSettingsId" AID="CacheUp">EES</property>

  <property name="TakeOfflineEES.File.OnlineFile" AID="CacheUp">D:\Temp\test2.txt</property>
  <property name="TakeOfflineEES.File.OfflineFile" AID="CacheUp">D:\Temp\offline-test2.txt</property>
  <property name="TakeOfflineEES.PutOnline" AID="CacheUp">True</property>
  <property name="TakeOfflineEES.OnlyIf" AID="CacheUp">True</property>
  <property name="TakeOfflineEES.AllowedSuccessFailures" AID="CacheUp">2</property>

</lookup>