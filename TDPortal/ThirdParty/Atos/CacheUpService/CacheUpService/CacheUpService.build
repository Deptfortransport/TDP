<?xml version="1.0" encoding="utf-8" ?>
<project name="test" default="build" basedir="./../../">

  <!-- Project properties. These should not be altered -->
  <property name="project.exe.name" value="wt.cacheupservice"/>
  <property name="project.src.dir" value="./WebTIS/CacheUpService" />
  <property name="project.build.dir" value="${project.src.dir}/bin/Debug"/>

  <!-- Load solution properties from the file 'build.properties'. These are overriddable -->
  <foreach item="Line" in="build.properties" delim="=" property="name,value" trim="Both">
    <property name="${name}" value="${value}" />
  </foreach>

  <!-- Delete the dll and pdb from the project build directory -->
  <target name="clean" description="removes the build directory">
    <delete file="${project.build.dir}/${project.exe.name}.exe" failonerror="false"/>
    <delete file="${project.build.dir}/${project.exe.name}.pdb" failonerror="false"/>
    <delete file="${solution.build.dir}/${project.exe.name}.exe" failonerror="false"/>
    <delete file="${solution.build.dir}/${project.exe.name}.pdb" failonerror="false"/>
  </target>

  <!-- Create the project and solution build directories if necessary -->
  <target name="init" depends="clean">
    <mkdir dir="${solution.build.dir}" />
    <mkdir dir="${project.build.dir}"/>
  </target>

	<!-- Compile the project to its build directory -->
	<target name="build" depends="init" description="Compiles the project">
		<echo message="Building ${project.exe.name}.exe. Debug=${build.debug}"/>
		<if test="${build.debug == 'Enable'}">
			<echo message="Including Test classes"/>
		</if>
		<csc target="exe" output="${project.build.dir}/${project.exe.name}.exe" debug="${build.debug}" define="TRACE" doc="${solution.doc.working.dir}/${project.exe.name}.xml">
			<nowarn>
				<warning number="${suppress.warning.list}" />
			</nowarn>
			<sources basedir="${project.src.dir}">
				<include name="**/*.cs" />
				<exclude name="**/Test*.cs" unless="${build.debug == 'Enable'}"/>
			</sources>
			<references basedir="${solution.build.dir}">
				<include name="*.dll"/>
				<include name="${solution.externals.dir}/*.dll"/>
			</references>
		</csc>
	</target>

	<!-- Build the project and copy its deliverables to the solution build directory -->
  <target name="build_to_solution" depends="build">
    <echo message="Copying deliverables from ${project.build.dir} to ${solution.build.dir}"/>
		<copy todir="${solution.build.dir}">
			<fileset basedir="${project.build.dir}">
				<include name="*.exe" />
				<include name="*.dll" />
				<include name="*.pdb" />
			</fileset>
		</copy>
	</target>

</project>
